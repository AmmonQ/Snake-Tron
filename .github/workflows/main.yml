name: CI/CD Tasks
on: [push]
jobs:
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      client: ${{ steps.filter.outputs.client }}
      shared: ${{ steps.filter.outputs.shared }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            client:
            - 'client/**'
            shared:
            - 'shared/**'
            
        # run only if 'changedFiles' files were changed
      - name: client tests or shared tests
        if: ${{ steps.filter.outputs.client == 'true' || steps.filter.outputs.shared == 'true' }}
        run: echo "changedFiles"
      - name: not changedFiles tests
        if: ${{ steps.filter.outputs.client != 'true' && steps.filter.outputs.shared != 'true' }}
        run: echo "NOT changedFiles"

  Run-Browserify:
    runs-on: ubuntu-latest
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.client == 'true' || steps.filter.outputs.shared == 'true' }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'

      - name: npm install
        run: npm install
      - name: Install Browserify
        run: npm install -g browserify
      - name: Run Browserify
        run: browserify client/client.js shared/constants.js -o public/js/bundle.js

      - name: setup github account
        run: |
          git config --local user.email "aq229@byu.edu"
          git config --local user.name "AmmonQ"
      - name: check for changes
        run: git status
      - name: stage changed file
        run: git add .
      - name: commit code
        run: git commit -m "auto update bundle.js on $(date)"

      - name: push code
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          
  build:
    runs-on: ubuntu-latest
    needs: Run-Browserify

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: node-app
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: node-app

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'snake-tron'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_86369DEABA40445AA732C91BF5E838DA }}
          package: .
